#  Copyright (c) 2025, Ben McCart
#  Boost Software License - Version 1.0 - August 17th, 2003
#
#  Permission is hereby granted, free of charge, to any person or organization
#  obtaining a copy of the software and accompanying documentation covered by
#  this license (the "Software") to use, reproduce, display, distribute,
#  execute, and transmit the Software, and to prepare derivative works of the
#  Software, and to permit third-parties to whom the Software is furnished to
#  do so, all subject to the following:
#
#  The copyright notices in the Software and this entire statement, including
#  the above license grant, this restriction and the following disclaimer,
#  must be included in all copies of the Software, in whole or in part, and
#  all derivative works of the Software, unless such copies or derivative
#  works are solely in the form of machine-executable object code generated by
#  a source language processor.
#
#  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
#  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
#  FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
#  SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
#  FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
#  ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
#  DEALINGS IN THE SOFTWARE.

# CMakeList.txt : CMake project for fuzzy_cpp, include source and define
# project specific logic here.
#
cmake_minimum_required (VERSION 3.12)

project ("test")

find_package(Catch2 CONFIG REQUIRED)

option(ENABLE_DEPRECATED_TESTS "Enables tests for deprecated features" OFF)

# Add source to this project's executable.
add_executable (test "test.cpp" )

if(ENABLE_DEPRECATED_TESTS)
    target_compile_definitions(test PRIVATE ENABLE_DEPRECATED_TESTS=1)
else()
    target_compile_definitions(test PRIVATE ENABLE_DEPRECATED_TESTS=0)
endif()

set_property(TARGET test PROPERTY CXX_STANDARD 20)
target_link_libraries(test PRIVATE Catch2::Catch2 Catch2::Catch2WithMain)
target_link_libraries(test PRIVATE fuzzy_cpp)

set(CMAKE_CXX_STANDARD_INCLUDE_DIRECTORIES ${CMAKE_CXX_IMPLICIT_INCLUDE_DIRECTORIES})

include(Catch)
catch_discover_tests(test)


